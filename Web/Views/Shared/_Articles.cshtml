@using PagedList.Mvc
@using PagedList
@model PagedList<Web.ModelViews.ArticleView>

@using CafeT.Text
@using CafeT.Time

<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<link href="~/Content/PagedList.css" rel="stylesheet" />


<div id="paging">
    <ul class="list-group">
        @foreach (var item in Model)
        {
            <li class="list-group-item">
                <div class="row">
                    <div class="col-md-4">
                        @if (item.ImageUrl.IsImageUrl())
                        {
                            <img src="@item.ImageUrl" class="img-fluid" />
                        }
                        else
                        {
                            <img src="~/Content/Images/GoogleDev.Club.png" class="img-fluid" />
                        }
                    </div>
                    <div class="col-md-8">
                        <h5>
                            @Html.ActionLink(item.Title, "Details", "Articles", new { id = item.GenerateSlug() }, null)
                        </h5>
                        <hr />
                        <p>
                            @if (item.CreatedBy != null && item.CreatedBy.Length > 0)
                            {
                                @Html.Raw("Post by: ") <span class="text-danger">@item.CreatedBy</span>
                            }
                            else
                            {
                                @Html.Raw("Post by: ") <span class="text-danger">GoogleDev.Club</span>
                            }
                            @Html.Raw(" on: " + item.CreatedDate.ToString())
                        </p>

                        @*<p class="text-justify">
                                @Html.Raw(item.Description.Replace(@"\n", "<br />").Replace(@"\", ""))
                            </p>*@
                        <p class="post-desc">
                            @if (item.Description.IsYouTubeWatchUrl())
                            {
                               

                            <div class="embed-responsive embed-responsive-16by9">
                                <iframe class="embed-responsive-item"
                                        src="https://www.youtube.com/embed/@item.DocumentId"
                                        frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
                                        allowfullscreen>
                                </iframe>
                            </div>
                            }
                            else
                            {
                                @Html.Raw(item.Description)
                            }

                        </p>
                        @if (!item.ContentUrl.GetDomain().Contains("google.com"))
                            {
                                <p>Nguồn: @Html.Raw(item.ContentUrl.GetDomain())</p>
                            }

                                <p>
                                    @if (item.Tags != null && item.Tags.Count() > 0)
                                    {
                                        @Html.Raw("Từ khóa: ")
                                        foreach (string tag in item.Tags)
                                        {
                                            if (tag.Length > 0)
                                            {
                                                <span class="text-danger">@Html.ActionLink(tag + "; ", "Search", "Articles", new { keyWords = tag }, null) </span>
                                            }

                                        }
                                    }

                                </p>
                    </div>
                </div>
            </li>
        }
    </ul>
    @Html.PagedListPager(Model, page =>
                                Url.Action("Index","Articles", new { page = page, pageSize=5 }),
                    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                    {
                        Display = PagedListDisplayMode.IfNeeded,
                        MaximumPageNumbersToDisplay = 5
                    },
                    new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "Post",
                        UpdateTargetId = "paging",
                        LoadingElementId = "divProcessing"
                    }))
</div>


